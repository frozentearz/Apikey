<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <context:component-scan base-package="com.xiaofangwei.*">
        <context:exclude-filter type="annotation" expression="org.springframework.web.servlet.mvc.Controller"/>
    </context:component-scan>

    <!--属性占位文件引入，可以通过${属性名}获得属性文件中的内容-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!--定义一个jdbc数据源，创建一个驱动管理数据源的bean -->
    <bean id="jdbcDataSource"
        class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--创建一个sql会话工厂bean，指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis配置文件 -->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--  指定数据源 -->
        <property name="dataSource" ref="jdbcDataSource" />
        <!--类型别名包，默认引入com.api.model.pojo下的所有类-->
        <!--<property name="typeAliasesPackage" value="com.xiaofangwei.common.model.pojo" />-->
        <!--指定sql映射xml文件的路径 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>

    <!--自动扫描映射接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定基础包，即自动扫描com.api.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.xiaofangwei.apidao" />
         <!--指定sql会话工厂，在上面配置过的-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="jdbcDataSource" />
    </bean>

</beans>
